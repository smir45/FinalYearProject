"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/blog/[blogslug]",{

/***/ "./pages/blog/[blogslug].js":
/*!**********************************!*\
  !*** ./pages/blog/[blogslug].js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\nvar _this = undefined;\n// import axios from \"axios\"\n// export const getStaticPaths = async () => {\n//     const res = await fetch(\"http://localhost:8000/api/blog/post/get\");\n//     const data = await res.json();\n//     console.log(data);\n//     const paths = data.map(post => {\n//         return {\n//             params: { slug: post.slug}\n//         }\n//     })\n//     return{\n//         paths,\n//         fallback: false\n//     }\n// }\n// export const getStaticProps = async ({ context }) => {\n//     const slug = context.params.slug;\n//     const res = await fetch(\"http://localhost:8000/api/blog/post/\" + slug);\n//     const data = await res.json();\n//     return {\n//         props: { post: data }\n//     }\n// }\nvar BlogPost = function(param) {\n    var post = param.post;\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        __source: {\n            fileName: \"/Users/ctrlscrpt/Documents/FinalYearProject/client/pages/blog/[blogslug].js\",\n            lineNumber: 31,\n            columnNumber: 9\n        },\n        __self: _this,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                __source: {\n                    fileName: \"/Users/ctrlscrpt/Documents/FinalYearProject/client/pages/blog/[blogslug].js\",\n                    lineNumber: 32,\n                    columnNumber: 13\n                },\n                __self: _this,\n                children: \"Trial\"\n            }),\n            \"\\xdf\"\n        ]\n    }));\n};\n_c = BlogPost;\n/* harmony default export */ __webpack_exports__[\"default\"] = (BlogPost);\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9ibG9nL1tibG9nc2x1Z10uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsRUFBNEI7QUFFNUIsRUFBOEM7QUFDOUMsRUFBMEU7QUFDMUUsRUFBcUM7QUFDckMsRUFBeUI7QUFFekIsRUFBdUM7QUFDdkMsRUFBbUI7QUFDbkIsRUFBeUM7QUFDekMsRUFBWTtBQUNaLEVBQVM7QUFDVCxFQUFjO0FBQ2QsRUFBaUI7QUFDakIsRUFBMEI7QUFDMUIsRUFBUTtBQUNSLEVBQUk7QUFFSixFQUF5RDtBQUN6RCxFQUF3QztBQUN4QyxFQUE4RTtBQUM5RSxFQUFxQztBQUVyQyxFQUFlO0FBQ2YsRUFBZ0M7QUFDaEMsRUFBUTtBQUNSLEVBQUk7QUFFSixHQUFLLENBQUNBLFFBQVEsR0FBRyxRQUFRLFFBQU0sQ0FBQztRQUFaQyxJQUFJLFNBQUpBLElBQUk7SUFDcEIsTUFBTSx1RUFDREMsQ0FBRzs7Ozs7Ozs7aUZBQ0NDLENBQUU7Ozs7Ozs7MEJBQUMsQ0FBSzs7WUFBSyxDQUNkOzs7QUFHWixDQUFDO0tBUEtILFFBQVE7QUFTZCwrREFBZUEsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9ibG9nL1tibG9nc2x1Z10uanM/MDFhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCJcblxuLy8gZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gYXN5bmMgKCkgPT4ge1xuLy8gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9ibG9nL3Bvc3QvZ2V0XCIpO1xuLy8gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuLy8gICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuXG4vLyAgICAgY29uc3QgcGF0aHMgPSBkYXRhLm1hcChwb3N0ID0+IHtcbi8vICAgICAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgICAgIHBhcmFtczogeyBzbHVnOiBwb3N0LnNsdWd9XG4vLyAgICAgICAgIH1cbi8vICAgICB9KVxuLy8gICAgIHJldHVybntcbi8vICAgICAgICAgcGF0aHMsXG4vLyAgICAgICAgIGZhbGxiYWNrOiBmYWxzZVxuLy8gICAgIH1cbi8vIH1cblxuLy8gZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gYXN5bmMgKHsgY29udGV4dCB9KSA9PiB7XG4vLyAgICAgY29uc3Qgc2x1ZyA9IGNvbnRleHQucGFyYW1zLnNsdWc7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2Jsb2cvcG9zdC9cIiArIHNsdWcpO1xuLy8gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgcHJvcHM6IHsgcG9zdDogZGF0YSB9XG4vLyAgICAgfVxuLy8gfVxuXG5jb25zdCBCbG9nUG9zdCA9ICh7IHBvc3QgfSkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8aDE+VHJpYWw8L2gxPsOfXG4gICAgICAgICAgICB7LyogPGgxPntwb3N0LnRpdGxlfTwvaDE+ICovfVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJsb2dQb3N0XG4iXSwibmFtZXMiOlsiQmxvZ1Bvc3QiLCJwb3N0IiwiZGl2IiwiaDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/blog/[blogslug].js\n");

/***/ })

});